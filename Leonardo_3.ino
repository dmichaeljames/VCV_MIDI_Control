/*******************************************************************\     This is Leonardo_1.    It will control VCOs, VCFs (1,3,5,7) and ADRs (VCO/VCF 1,3,5,7)    \*******************************************************************/#include <MIDIUSB.h>#include <frequencyToNote.h>#include <pitchToFrequency.h>#include <pitchToNote.h>// Initializing those variablesint bank = -1; int cc = 0; // more initializationvoid setup() {  // toggle for bank selection  pinMode(2,INPUT);}void midi(int cc);void loop() {  int bank = digitalRead(2); // 0 or 1  cc = (3 * bank); // This sets CC as a multiplier (each bank has 12 values for CC, this gives us all 24(Leo_1 & Leo_2 used 0-95, this gives us 96-119)  midi(cc);}void midi(int cc) {  uint8_t oldAnalogValue = 0;  uint8_t newAnalogValue = 0;    for (int i=0; i<12;i++){                    // Checking all 12 analog inputs (0 through 11)    uint16_t analogValue = analogRead(i);    uint8_t newAnalogValue = analogValue >> 3;    cc *= 12; // Our CC multiplier * 12 (for the 12 analog values) bank0: 0-11, bank1: 12-23, bank2: 24-35, bank3: 36-47      if( newAnalogValue != oldAnalogValue ) // if nothing's changed, skip it    {         midiEventPacket_t midiCc = { 0x0B, 0xB0, cc, newAnalogValue }; // {midi type: CC, MIDI channel 1, CC#, CC value}      MidiUSB.sendMIDI(midiCc); // send above packet      MidiUSB.flush(); // flush it all down      oldAnalogValue = newAnalogValue; // set equal so if nothing changes, skip the loops    }  }}